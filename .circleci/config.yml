---
version: 2

jobs:
  build:
    machine:
      # https://circleci.com/developer/machine/image/ubuntu-2204
      image: ubuntu-2204:2022.10.2

    steps:
    - checkout
    - restore_cache:
        keys:
        - my_cache

    - run: mkdir -p ${HOME}/data

    - run:
        name: 'Get test data: ds114_test1'
        command: |
          if [[ ! -d ~/data/ds114_test1 ]]; then
            wget -c -O ${HOME}/ds114_test1.tar "https://osf.io/download/zerfq/" && \
            mkdir -p ${HOME}/data && \
            tar xf ${HOME}/ds114_test1.tar -C ${HOME}/data;
          fi
    - run:
        name: 'Get test data: ds114_test2'
        command: |
          if [[ ! -d ~/data/ds114_test2 ]]; then
            wget -c -O ${HOME}/ds114_test2.tar "https://osf.io/download/eg4ma/" && \
            mkdir -p ${HOME}/data && \
            tar xf ${HOME}/ds114_test2.tar -C ${HOME}/data;
          fi
    - run:
        name: Build Docker image
        command: |
          if [[ -e ~/docker/image.tar ]]; \
            then docker load -i ~/docker/image.tar;
          fi
          git describe --tags --always > version
          docker build -t bids/${CIRCLE_PROJECT_REPONAME,,} .
          mkdir -p ${HOME}/docker
          docker save "bids/${CIRCLE_PROJECT_REPONAME,,}" > ~/docker/image.tar

    - save_cache:
        key: my_cache
        paths:
        - ~/docker
        - ~/data

    - persist_to_workspace:
        root: ~/docker
        paths:
        - image.tar

  test:
    docker:
    - image: ubuntu-2204:2022.10.2

    steps:
    - attach_workspace:
        at: /tmp/workspace
    - run: docker load -i /tmp/workspace/image.tar

    - run: mkdir -p ${HOME}/outputs

    - run:
        name: print version
        command: |
          docker run -ti --rm --read-only bids/${CIRCLE_PROJECT_REPONAME,,} --version

    - run:
        name: participant level tests for single session dataset
        command: |
          docker run -ti --rm --read-only \
            -v /tmp:/tmp \
            -v /var/tmp:/var/tmp \
            -v ${HOME}/data/ds114_test1:/bids_dataset \
            -v ${HOME}/outputs1:/outputs \
              bids/${CIRCLE_PROJECT_REPONAME,,} \
                /bids_dataset /outputs participant \
                --participant_label 01 \
                --afni_proc \
                  '-subj_id {subj_id} \
                  -script proc.bids -scr_overwrite -out_dir {out_dir} \
                  -blocks tshift volreg blur scale \
                  -copy_anat {anat_path} -tcat_remove_first_trs 0 -dsets {epi_paths} \
                  -volreg_align_to MIN_OUTLIER -blur_size 4.0 -bash'
        no_output_timeout: 6h

    - run:
        command: |
          docker run -ti --rm --read-only \
            -v /tmp:/tmp \
            -v /var/tmp:/var/tmp \
            -v ${HOME}/data/ds114_test1:/bids_dataset \
            -v ${HOME}/outputs1:/outputs bids/${CIRCLE_PROJECT_REPONAME,,} \
            /bids_dataset /outputs participant \
              --participant_label 02
              --afni_proc \
                '-subj_id {subj_id} -script proc.bids -scr_overwrite -out_dir {out_dir} \
                -blocks tshift volreg blur scale -copy_anat {anat_path} -tcat_remove_first_trs 0 -dsets {epi_paths} \
                -volreg_align_to MIN_OUTLIER -blur_size 4.0 -bash'
        no_output_timeout: 6h

      # group level test for single session dataset
      #- docker run -ti --rm --read-only -v /tmp:/tmp -v /var/tmp:/var/tmp -v ${HOME}/data/ds114_test1:/bids_dataset -v ${HOME}/outputs1:/outputs bids/${CIRCLE_PROJECT_REPONAME,,} /bids_dataset /outputs group :
      #    timeout: 21600

    - run:
        name: participant level tests for a longitudinal dataset
        command: |
          docker run -ti --rm --read-only \
            -v /tmp:/tmp \
            -v /var/tmp:/var/tmp \
            -v ${HOME}/data/ds114_test2:/bids_dataset \
            -v ${HOME}/outputs1:/outputs bids/${CIRCLE_PROJECT_REPONAME,,} \
              /bids_dataset /outputs participant \
              --participant_label 01 \
              --afni_proc \
                '-subj_id {subj_id} -script proc.bids -scr_overwrite -out_dir {out_dir} \
                -blocks tshift volreg blur scale -copy_anat {anat_path} -tcat_remove_first_trs 0 \
                -dsets {epi_paths} -volreg_align_to MIN_OUTLIER -blur_size 4.0 -bash'
        no_output_timeout: 6h
    - run:
        command: |
          docker run -ti --rm --read-only \
            -v /tmp:/tmp \
            -v /var/tmp:/var/tmp \
            -v ${HOME}/data/ds114_test2:/bids_dataset \
            -v ${HOME}/outputs1:/outputs bids/${CIRCLE_PROJECT_REPONAME,,} \
              /bids_dataset /outputs participant \
              --participant_label 02 \
              --afni_proc \
                '-subj_id {subj_id} -script proc.bids -scr_overwrite -out_dir {out_dir} \
                -blocks tshift volreg blur scale -copy_anat {anat_path} -tcat_remove_first_trs 0 \
                -dsets {epi_paths} -volreg_align_to MIN_OUTLIER -blur_size 4.0 -bash'
        no_output_timeout: 6h

    # group level test for a longitudinal dataset
    #- docker run -ti --rm --read-only -v /tmp:/tmp -v /var/tmp:/var/tmp -v ${HOME}/data/ds114_test2:/bids_dataset -v ${HOME}/outputs2:/outputs bids/${CIRCLE_PROJECT_REPONAME,,} /bids_dataset /outputs group :
    #    timeout: 21600

  deployment:
    docker:
    - image: ubuntu-2204:2022.10.2

    steps:
    - attach_workspace:
        at: /tmp/workspace
    - run: docker load -i /tmp/workspace/image.tar

    - run:
        command: |
          if [[ -n "$DOCKER_PASS" ]]; then
            docker login -u $DOCKER_USER -p $DOCKER_PASS && \
            docker push bids/${CIRCLE_PROJECT_REPONAME,,}:latest;
          fi
        no_output_timeout: 6h
    - run:
        command: |
          if [[ -n "$DOCKER_PASS" ]]; then
            docker login -u $DOCKER_USER -p $DOCKER_PASS && \
            docker tag bids/${CIRCLE_PROJECT_REPONAME,,} bids/${CIRCLE_PROJECT_REPONAME,,}:$CIRCLE_TAG && \
            docker push bids/${CIRCLE_PROJECT_REPONAME,,}:$CIRCLE_TAG;
          fi
        no_output_timeout: 6h

workflows:
  version: 2
  build-test-deploy:
    jobs:
    - build
    - test:
        requires:
        - build
    - deployment:
        requires:
        - build
        filters:
          branches:
            ignore: /.*/
          tags:
            only: /.*/
# VS Code Extension Version: 1.5.1
